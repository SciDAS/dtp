apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "dtp.fullname" . }}
  labels:
    app: {{ template "dtp.name" . }}
    chart: {{ template "dtp.chart" . }}
    release: {{ .Release.Name }}
    instance: {{ .Values.Instance }}
spec:
  replicas: {{ .Values.Replicas }}
  selector:
    matchLabels:
      app: {{ template "dtp.name" . }}
      instance: {{ .Values.Instance }}
  template:
    metadata:
      labels:
        app: {{ template "dtp.name" . }}
        chart: {{ template "dtp.chart" . }}
        release: {{ .Release.Name }}
        instance: {{ .Values.Instance }}
    spec:
      containers:               
      - name: dtp-base # Base image(also for local transfers)
        image: ubuntu
        command: [ "/bin/bash", "-c", "--" ]
        args: [ "echo 'cd {{ template "pvcPath" . }}' >> ~/.bashrc && source ~/.bashrc && tail -f /dev/null" ]
        resources:
          requests:
            cpu: {{ .Values.Resources.CPU }}
            memory: {{ .Values.Resources.Memory }}
        volumeMounts:
        - name: vol-1
          mountPath: {{ template "pvcPath" . }}
      {{ if .Values.iRODS.Enabled }} # iRODS
      - name: dtp-irods
        image: cbmckni/dtp-irods 
        command: [ "/bin/bash", "-c", "--" ]
        args: [ "echo 'cd {{ template "pvcPath" . }}' >> ~/.bashrc && echo 'iinit ${IRODS_PASSWORD}' >> ~/.bashrc && source ~/.bashrc && tail -f /dev/null" ]
        resources:
          requests:
            cpu: {{ .Values.Resources.CPU }}
            memory: {{ .Values.Resources.Memory }}
        volumeMounts:
        - name: vol-1
          mountPath: {{ template "pvcPath" . }}
        {{ if .Values.iRODS.Secrets }}
        - name: ienv
          mountPath: "/etc/.irods"
        env: 
            - 
              name: IRODS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: irods
                  key: IRODS_PASSWORD
            - 
              name: IRODS_ENVIRONMENT_FILE
              valueFrom:
                secretKeyRef:
                  name: irods
                  key: IRODS_ENVIRONMENT_FILE
        {{ end }}
      {{ end }}
      {{ if .Values.AWS.Enabled }} # AWS CLI
      - name: dtp-aws
        image: mesosphere/aws-cli
        command: ["/bin/sh"]
        args: ["-c", "apk update && apk upgrade && apk add bash && echo 'cd {{ template "pvcPath" . }}' >> ~/.bashrc && source ~/.bashrc && tail -f /dev/null"]
        resources:
          requests:
            cpu: {{ .Values.Resources.CPU }}
            memory: {{ .Values.Resources.Memory }}
        volumeMounts:
        - name: vol-1
          mountPath: {{ template "pvcPath" . }}
        {{ if .Values.AWS.Secrets }}
        env:  
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws
                  key: AWS_SECRET_ACCESS_KEY 
        {{ end }}
      {{ end }}
      {{ if .Values.Minio.Enabled }} # MinIO
      - name: dtp-minio
        image: minio/mc
        command: ["/bin/sh"]
        args: ["-c", "apk update && apk upgrade && apk add bash && echo 'cd {{ template "pvcPath" . }}' >> ~/.bashrc && source ~/.bashrc && tail -f /dev/null"]
        resources:
          requests:
            cpu: {{ .Values.Resources.CPU }}
            memory: {{ .Values.Resources.Memory }}
        volumeMounts:
        - name: vol-1
          mountPath: {{ template "pvcPath" . }}
        {{ if .Values.Minio.Secrets }}
        env:  
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws
                  key: AWS_SECRET_ACCESS_KEY
        {{ end }}
      {{ end }}
      {{ if .Values.NDN.Enabled }} # Name Defined Network
      - name: dtp-ndn
        image: peetonn/ndn-docker
        command: [ "/bin/bash", "-c", "--" ]
        args: [ "echo 'cd {{ template "pvcPath" . }}' >> ~/.bashrc && source ~/.bashrc && tail -f /dev/null" ]
        resources:
          requests:
            cpu: {{ .Values.Resources.CPU }}
            memory: {{ .Values.Resources.Memory }}
        volumeMounts:
        - name: vol-1
          mountPath: {{ template "pvcPath" . }}
      {{ end }}
      {{ if .Values.Aspera.Enabled }} # Aspera
      - name: dtp-aspera
        image: ibmcom/aspera-cli
        command: [ "/bin/bash", "-c", "--" ]
        args: [ "echo 'cd {{ template "pvcPath" . }}' >> ~/.bashrc && source ~/.bashrc && tail -f /dev/null" ]
        resources:
          requests:
            cpu: {{ .Values.Resources.CPU }}
            memory: {{ .Values.Resources.Memory }}
        volumeMounts:
        - name: vol-1
          mountPath: {{ template "pvcPath" . }}
        {{ if .Values.Aspera.Secrets }}
        env:  
            - name: ACLI_USERNAME
              valueFrom:
                secretKeyRef:
                  name: aspera
                  key: ACLI_USERNAME
            - name: ACLI_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: aspera
                  key: ACLI_PASSWORD
        {{ end }}
      {{ end }}
      {{ if .Values.SRAToolkit.Enabled }} # SRA Toolkit
      - name: dtp-sra-toolkit
        image: ncbi/sra-toolkit
        command: [ "/bin/bash", "-c", "--" ]
        args: [ "echo 'cd {{ template "pvcPath" . }}' >> ~/.bashrc && source ~/.bashrc && tail -f /dev/null" ]
        resources:
          requests:
            cpu: {{ .Values.Resources.CPU }}
            memory: {{ .Values.Resources.Memory }}
        volumeMounts:
        - name: vol-1
          mountPath: {{ template "pvcPath" . }}
      {{ end }}
      restartPolicy: Always
      volumes:
        - name: vol-1
          persistentVolumeClaim:
            claimName: {{ template "pvcName" . }}
        {{ if .Values.iRODS.Secrets }}
        - name: ienv
          secret:
            secretName: irods
            defaultMode: 256
        {{ end }}


# Variables

{{- define "pvcPath" -}}
{{- if .Values.NewPVC.Enabled }}{{ .Values.NewPVC.Path }}{{ else }}{{ .Values.ExistingPVC.Path }}{{ end }}
{{- end -}}

{{- define "pvcName" -}}
{{- if .Values.NewPVC.Enabled }}{{ .Values.NewPVC.Name }}{{ else }}{{ .Values.ExistingPVC.Name }}{{ end }}
{{- end -}}


